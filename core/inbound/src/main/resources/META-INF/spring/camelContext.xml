<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
   xmlns:camel="http://camel.apache.org/schema/spring"
   xmlns:context="http://www.springframework.org/schema/context"
   xmlns:jaxrs="http://cxf.apache.org/jaxrs"
   xmlns:osgi="http://www.springframework.org/schema/osgi"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd   http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd   http://cxf.apache.org/jaxrs http://cxf.apache.org/schemas/jaxrs.xsd   http://www.springframework.org/schema/osgi http://www.springframework.org/schema/osgi/spring-osgi.xsd   http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
   <!-- This reference just lets all of our routes use the same
  connection pool set up in the mq-service project 
   <osgi:reference id="activemqService" interface="org.apache.camel.Component"/>
 -->
   <bean class="org.apache.activemq.ActiveMQConnectionFactory" id="jmsConnectionFactory">
      <property name="brokerURL" value="tcp://localhost:61616"/>
   </bean>
   <bean class="org.apache.activemq.pool.PooledConnectionFactory"
      destroy-method="stop" id="pooledConnectionFactory" init-method="start">
      <property name="maxConnections" value="8"/>
      <property name="connectionFactory" ref="jmsConnectionFactory"/>
   </bean>
   <bean class="org.springframework.jms.core.JmsTemplate" id="jmsTemplate">
      <property name="connectionFactory" ref="pooledConnectionFactory"/>
   </bean>
   <bean class="com.redhat.usecase.service.impl.DEIMServiceImpl" id="demographicImpl"/>
   <jaxrs:server address="http://localhost:9098/cxf/demos" id="demoGraphicsService">
      <jaxrs:serviceBeans>
         <ref bean="demographicImpl"/>
      </jaxrs:serviceBeans>
   </jaxrs:server>
   <camelContext id="inboundRest" trace="false" xmlns="http://camel.apache.org/schema/spring">
      <dataFormats>
         <jaxb contextPath="com.customer.app" id="personFormat" partClass="com.customer.app.Person"/>
      </dataFormats>
      <onException id="_onException1">
         <exception>java.lang.Exception</exception>
         <handled>
            <constant>true</constant>
         </handled>
         <to id="_to5" uri="direct:error"/>
      </onException>
      <!-- this is the route called by DEIMServiceImpl -->
      <route id="handleRest">
         <from id="_from1" uri="direct:integrateRoute"/>
         <log id="_log1" loggingLevel="INFO" message="rest headers: ${headers}"/>
         <choice id="_choice1">
            <when id="_when11">
               <xpath>$METHOD = 'match'</xpath>
               <marshal id="_marshal1" ref="personFormat"/>
               <log id="_log2" loggingLevel="INFO" message="after marshal: ${body}"/>
               <choice id="_choice2">
                  <when id="_when21">
                     <simple>${bodyAs(String)} contains 'legalname'</simple>
                     <inOnly id="_to1" uri="activemq:queue:q.empi.deim.in"/>
                     <to id="_to2" uri="direct:done"/>
                  </when>
                  <otherwise id="_otherwise2">
                     <to id="_to3" uri="direct:match"/>
                  </otherwise>
               </choice>
            </when>
            <otherwise id="_otherwise1">
               <to id="_to4" uri="direct:unmatch"/>
            </otherwise>
         </choice>
      </route>
      <route id="processDone">
         <from id="_from2" uri="direct:done"/>
         <transform id="_transform1">
            <constant>2</constant>
         </transform>
      </route>
      <route id="processMatch">
         <from id="_from3" uri="direct:match"/>
         <transform id="_transform2">
            <constant>1</constant>
         </transform>
      </route>
      <route id="processUnmatch">
         <from id="_from4" uri="direct:unmatch"/>
         <transform id="_transform3">
            <constant>0</constant>
         </transform>
      </route>
      <route id="processError">
         <from id="_from5" uri="direct:error"/>
         <transform id="_transform4">
            <constant/>
         </transform>
      </route>
   </camelContext>
</beans>
